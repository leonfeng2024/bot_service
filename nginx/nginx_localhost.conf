events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
    client_max_body_size 0;  # Remove file upload size limit

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;
    error_log   /var/log/nginx/error.log;

    sendfile        on;
    keepalive_timeout  65;

    server {
        listen       80;
        server_name  bibot_dns;
        
        location / {
            root   /usr/share/nginx/html/build;
            index  index.html index.htm;
            try_files $uri $uri/ /index.html;
        }

        # provide file download
        location /output/ {
            proxy_pass http://localhost:8000/output/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            
            # set file download related headers
            add_header Content-Disposition "attachment";
            add_header Content-Type application/octet-stream;
            
            # add timeout settings
            proxy_connect_timeout 300s;
            proxy_send_timeout 300s;
            proxy_read_timeout 300s;
        }

        # backend API proxy configuration, support CORS
        location /api/ {
            # fix proxy path, do not add slash
            proxy_pass http://localhost:8000/;
            
            # basic proxy settings
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            
            # add timeout settings - set to 5 minutes
            proxy_connect_timeout 300s;  # connection timeout
            proxy_send_timeout 300s;     # send timeout
            proxy_read_timeout 300s;     # read timeout
            
            # CORS configuration - use wildcard for testing
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE' always;
            add_header 'Access-Control-Allow-Headers' 'Origin, X-Requested-With, Content-Type, Accept, Authorization' always;
            add_header 'Access-Control-Expose-Headers' 'Content-Length, Content-Range' always;
            
            # preflight request handling
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' '*';
                add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE';
                add_header 'Access-Control-Allow-Headers' 'Origin, X-Requested-With, Content-Type, Accept, Authorization';
                add_header 'Access-Control-Max-Age' 1728000;
                add_header 'Content-Type' 'text/plain; charset=utf-8';
                add_header 'Content-Length' 0;
                return 204;
            }
        }
    }
} 