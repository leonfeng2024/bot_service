events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
    client_max_body_size 0;  # Remove file upload size limit

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;
    error_log   /var/log/nginx/error.log;

    sendfile        on;
    keepalive_timeout  65;

    server {
        listen       80;
        server_name  bibot;
        root         /Users/fengliang/GitHub/React_Typescript/build;
 
        # 前端静态文件服务 
        location / {
            try_files $uri $uri/ /index.html; 
            expires 30d;
            access_log off;
        }
 
        # API接口代理配置（支持路径包含/api的请求）
        location ~ ^/api {
            proxy_pass http://localhost:8000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # 跨域支持 
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'Content-Type, Authorization';
            
            # 预检请求处理 
            if ($request_method = 'OPTIONS') {
                return 204;
            }
        }
 
        # 输出路径代理配置 
        location /output/ {
            proxy_pass http://localhost:8000/output/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_redirect off;
            
            # 缓存控制（根据需求调整）
            expires 1h;
            add_header Cache-Control "public";
        }
 
        # 错误页面 
        error_page 404 /404.html; 
        error_page 500 502 503 504 /50x.html; 
    }
} 